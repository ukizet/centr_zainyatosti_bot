from aiogram import types, Dispatcher
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.dispatcher.filters import Text

from create_bot import dp
from keyboards import client_kb, admin_kb
from database import db


class Buttons_handlers():
    async def admin_panel(self, message: types.Message):
        await message.answer(reply_markup=admin_kb, text='admin panel')
        pass

    async def command_schedule(self, message: types.Message):
        await message.answer('–∑ 08:00 –¥–æ 17:00')

    async def command_menu(self, message: types.Message):
        # await db.sql_read(message=message)
        # await message.answer('–©–µ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ', reply_markup=client_kb)
        for vacancy in await db.db_obj.select_data(message, 'vacancies', '*'):
            await message.answer(f'–ù–∞–∑–≤–∞ –≤–∞–∫–∞–Ω—Å—ñ—ó: {vacancy[2]}\n–û–ø–∏—Å: {vacancy[3]}\n–ó–ü: {vacancy[4]}')


buttons_handlers_obj = Buttons_handlers()


async def command_start(message: types.Message):
    await message.answer('–í–∏–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω–∏–π —Ä–æ–∑–¥—ñ–ª –Ω–∏–∂—á–µüëá', reply_markup=client_kb)


def reg_handlers_client(dp: Dispatcher):
    def reg_buttons():
        dp.register_message_handler(
            buttons_handlers_obj.admin_panel, Text(equals='–ü–∞–Ω–µ–ª—å –∞–¥–º—ñ–Ω–∞'))
        dp.register_message_handler(
            buttons_handlers_obj.command_schedule, Text(equals='–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏'))
        dp.register_message_handler(
            buttons_handlers_obj.command_menu, Text(equals='–ú–µ–Ω—é'))

    reg_buttons()

    dp.register_message_handler(command_start)
